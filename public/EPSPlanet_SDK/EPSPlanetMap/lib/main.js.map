{"version":3,"file":"main.js","sources":["../../src/utils/init.ts","../../src/base/base-label.ts","../../src/base/enums.ts","../../src/decorators/component.ts","../../src/utils/tools.ts","../../src/base/base-widget.ts","../../src/utils/style.ts","../../src/manager/widget-manager/widget-manager.ts","../../src/manager/widget-icon/widget-icon.html?raw","../../src/base/layout/DomGeometry.ts","../../src/base/layout/ResizeHandle.ts","../../src/manager/widget-icon/widget-icon.ts","../../src/main.ts"],"sourcesContent":["\r\n/**\r\n * 用来加载各种文件\r\n */\r\nexport class Loader {\r\n    /**\r\n     * 加载js文件\r\n     * @param src 需要加载的js的地址\r\n     * @param isModule 是否是ES6\r\n     * @returns \r\n     */\r\n    static loadScript(src: string, isModule = false) {\r\n        return new Promise((resolve) => {\r\n            if (src === '') {\r\n                resolve(false);\r\n                return;\r\n            }\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.async = false;// 保证js顺序执行\r\n            script.onload = () => {\r\n                script.remove();\r\n                resolve(true);\r\n            }\r\n            script.onerror = () => {\r\n                script.remove();\r\n                resolve(false);\r\n            }\r\n            // script.crossOrigin = 'anonymous';\r\n            isModule && (script.type = 'module');\r\n            script.src = src;\r\n            if (document.head.append) {\r\n                document.head.append(script);\r\n            } else {\r\n                document.getElementsByTagName('head')[0].appendChild(script);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载css文件\r\n     * @param href \r\n     * @returns \r\n     */\r\n    static loadCSS(href: string) {\r\n        return new Promise((resolve) => {\r\n            if (href === '') {\r\n                resolve(false);\r\n                return;\r\n            }\r\n\r\n            const link = document.createElement('link');\r\n            link.rel = 'stylesheet';\r\n            link.href = href;\r\n            link.onload = () => {\r\n                // link.remove();\r\n                resolve(true);\r\n            }\r\n            link.onerror = () => {\r\n                // link.remove();\r\n                resolve(false);\r\n            }\r\n            // link.crossOrigin = 'anonymous';\r\n            if (document.head.append) {\r\n                document.head.append(link);\r\n            } else {\r\n                document.getElementsByTagName('head')[0].appendChild(link);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载json\r\n     * @param url \r\n     * @returns \r\n     */\r\n    static async loadJSON(url: string) {\r\n        const response = await fetch(url);\r\n        return await response.json();\r\n    }\r\n}\r\n\r\n/**\r\n * 初始化\r\n */\r\nexport const init = async () => {\r\n    // 加载配置文件\r\n    const isDebug = (window as any).isDebug;\r\n    let configUrl = 'configs/setting.json';\r\n    if (isDebug) { // 调试模式\r\n        configUrl = 'configs/debug.json';\r\n    }\r\n\r\n    const config = await Loader.loadJSON(configUrl);\r\n    // 按顺序加载css js ts 等文件\r\n    let request: any[] = [];\r\n    config.include.forEach((key: string) => {\r\n        const module = config.modules[key];\r\n        module.forEach((item: any) => {\r\n            switch (item.type) {\r\n                case 'css':\r\n                    request.push(Loader.loadCSS(item.url));\r\n                    break;\r\n                case 'js':\r\n                    request.push(Loader.loadScript(item.url));\r\n                    break;\r\n                case 'module':\r\n                    request.push(Loader.loadScript(item.url, true));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    });\r\n\r\n    await Promise.all(request);\r\n\r\n}\r\n","/**\r\n * 基础的标签\r\n * {{}}将会被替换成该标签\r\n */\r\nexport class BaseLabel extends HTMLElement {\r\n    /**\r\n     * 原始属性\r\n     */\r\n    #origin: string;\r\n    public get origin(): string {\r\n        return this.#origin;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#origin = this.innerHTML.trim();\r\n    }\r\n}\r\n\r\ncustomElements.define('w-l', BaseLabel);","/**\r\n * 组件模式枚举\r\n * none 不启用任何功能 | funOnly 只启用函数 | propOnly 只启用属性 | always 总是启用\r\n */\r\nexport enum Mode {\r\n    /** 不启用任何功能 */\r\n    none,\r\n    /** 只启用函数 */\r\n    funOnly,\r\n    /** 只启用属性 */\r\n    propOnly,\r\n    /** 总是启用 */\r\n    always\r\n}","import { Mode } from \"../base/enums\";\r\n\r\n/**\r\n * 组件的创建参数\r\n */\r\nexport interface Manifest {\r\n    /**\r\n     * 标签的名称\r\n     */\r\n    tagName: string;\r\n    /**\r\n     * css类名，默认和tagName一致\r\n     */\r\n    className?: string;\r\n    /**\r\n     * html模板\r\n     */\r\n    template?: string;\r\n    /**\r\n     * 是否有config，默认为否\r\n     */\r\n    hasConfig?: boolean;\r\n    /**\r\n     * 模式\r\n     * 不启用 | 只启用函数 | 只启用属性 | 总是启用\r\n     * 默认值为always\r\n     */\r\n    mode?: Mode\r\n}\r\n\r\n\r\n/**\r\n * 组件装饰器\r\n * @param {Manifest} manifest 装饰器的参数\r\n * @returns {any} Target object.\r\n */\r\nexport const Component = (manifest: Manifest): any => {\r\n    return (target: any) => {\r\n        target.prototype._manifest = getManifest(manifest);\r\n        // 创建标签\r\n        customElements.define(manifest.tagName, target as CustomElementConstructor);\r\n        return target as any;\r\n    };\r\n}\r\n\r\n/**\r\n * 给装饰器参数添加默认值\r\n * @param manifest 装饰器参数\r\n * @returns 添加默认值之后的装饰器参数\r\n */\r\nconst getManifest = (manifest: Manifest): Manifest => {\r\n    // 合成manifest，添加默认参数\r\n    manifest = Object.assign({\r\n        hasConfig: false,\r\n        mode: Mode.always\r\n    }, manifest);\r\n\r\n    return manifest;\r\n}","/**\r\n * 立即执行 主要用于防抖\r\n * 将指定函数放到队列中\r\n * @param {Function} callback \r\n */\r\nexport const timerFunc = (callback: any) => {\r\n    if (Promise) {\r\n        Promise.resolve().then(callback)\r\n    }\r\n    // 使用动画执行\r\n    else if (requestAnimationFrame) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        /**\r\n         * 使用setTimeout 可能会出现延迟\r\n         */\r\n        setTimeout(callback, 0);\r\n    }\r\n}","import { Manifest } from \"../decorators/component\";\r\nimport { Mode } from \"./enums\";\r\nimport { timerFunc } from \"../utils/tools\";\r\n\r\n\r\n/**\r\n * 初始化必要的参数\r\n */\r\ninterface StartInfo {\r\n    mapView: BaseWidget;\r\n    map: any;\r\n    config: object;\r\n    mapConfig: object;\r\n}\r\n\r\n\r\n/**\r\n * 组件原型\r\n */\r\nexport default class BaseWidget extends HTMLElement {\r\n    [x: string]: any; // 任意的string索引List\r\n    // 一些私有属性\r\n    #mapConfig?: object;\r\n    #mapView?: BaseWidget;\r\n    #map: any;\r\n    #config?: object;\r\n    #loading?: boolean;\r\n    #data: any;\r\n    #labelTag = 'w-l'; // label标签的名称\r\n    #rendered: boolean = false;// 渲染是否完成\r\n    #mode: Mode; //组件模式\r\n\r\n    constructor() {\r\n        super();\r\n        // 加载配置文件\r\n        if (this.manifest.hasConfig) {\r\n            this.#loadConfig(this.getAttribute('config') || this.getAttribute('configUrl'));\r\n        }\r\n\r\n        this.#mode = this.manifest.mode ?? Mode.always;\r\n        /**\r\n         * 防止出现如下错误：\r\n         *     Failed to construct 'CustomElement': The result must not have attributes\r\n         */\r\n        timerFunc(() => {\r\n            this.#initDom();\r\n            this.#onInit();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 手动启动初始化的方法\r\n     * @param args 初始化的必要参数\r\n     */\r\n    public startup(args: StartInfo) {\r\n        this.mapView = args.mapView;\r\n        this.map = args.map;\r\n        this.mapConfig = args.mapConfig;\r\n        this.config = args.config;\r\n    }\r\n\r\n    /**\r\n     * 组件的创建参数\r\n     */\r\n    public get manifest(): Manifest {\r\n        return this._manifest as Manifest;\r\n    }\r\n\r\n    /**\r\n     * 当前组件所在地图的配置 类似于之前的appConfig\r\n     */\r\n    public get mapConfig(): any {\r\n        return this.#mapConfig;\r\n    }\r\n    public set mapConfig(value: any) {\r\n        // mapConfig只设置一次，设置完调用组件初始化方法 #onInit\r\n        if (!this.#mapConfig && value) {\r\n            this.#mapConfig = value;\r\n            this.#onInit();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 组件所在地图的原型，如果组件本身为地图，则指向自身\r\n     */\r\n    public get mapView(): BaseWidget {\r\n        return this.#mapView as BaseWidget;\r\n    }\r\n    public set mapView(value: BaseWidget) {\r\n        // mapView只设置一次，设置完调用组件初始化方法 #onInit\r\n        if (!this.#mapView && value) {\r\n            this.#mapView = value;\r\n            this.#onInit();\r\n        }\r\n    }\r\n\r\n    /**\r\n      * 当前组件所在地图\r\n      */\r\n    public get map() {\r\n        return this.#map;\r\n    }\r\n    public set map(value: any) {\r\n        // map只设置一次，设置完调用组件初始化方法 #onInit\r\n        if (!this.#map && value) {\r\n            this.#map = value;\r\n            this.#onInit();\r\n        }\r\n    }\r\n\r\n    /**\r\n      * 当前组件的配置\r\n      */\r\n    public get config(): any {\r\n        return this.#config;\r\n    }\r\n    public set config(value: object) {\r\n        // 当config设置为string时，认为其是url\r\n        if (typeof value === 'string') {\r\n            this.#loadConfig(value);\r\n            return;\r\n        }\r\n        // 当config设置为object时，认为其是配置\r\n        else if (typeof value === 'object') {\r\n            // config只设置一次，设置完调用组件初始化方法 #onInit\r\n            if (!this.#config && value) {\r\n                this.#config = value;\r\n                this.#onInit();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载config\r\n     * 当config不存在时，从文件加载config\r\n     */\r\n    async #loadConfig(configUrl: string | null) {\r\n        // 绑定config\r\n        if (!this.config && configUrl) {\r\n            this.loading = true;\r\n            const response = await fetch(configUrl);\r\n            this.config = response && response.ok && await response.json() || {};\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载中\r\n     */\r\n    public get loading(): boolean {\r\n        return !!this.#loading;\r\n    }\r\n    public set loading(value: boolean) {\r\n        this.#loading = value;\r\n        this.#onLoading();\r\n    }\r\n\r\n    /**\r\n     * loading状态改变\r\n     */\r\n    #onLoading() {\r\n        if (this.loading) {\r\n            this.classList.add('loading');\r\n        }\r\n        else {\r\n            this.classList.remove('loading');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化方法，用于初始化Dom\r\n     */\r\n    #initDom() {\r\n        // 添加样式\r\n        const className = this.manifest.className || this.manifest.tagName;\r\n        this.classList.add(className);\r\n\r\n        // 加载dom内容\r\n        // 要实现事件绑定 双大括号绑定属性\r\n        if (this.manifest.template) {\r\n            let template = this.manifest.template;\r\n\r\n            if ((this.#mode & Mode.propOnly) == Mode.propOnly) { // 二进制比较 判断是否需要属性绑定\r\n                // 获取需要绑定的属性\r\n                // 同时将 {{}} 替换成 #labelTag以便实现局部更新\r\n                template = template.replace(/\\{\\{(.+?)\\}\\}/g, (...args) => {\r\n                    return `<${this.#labelTag}>${args[1]}</${this.#labelTag}>`;\r\n                });\r\n            }\r\n\r\n            this.innerHTML = template;\r\n\r\n            if ((this.#mode & Mode.funOnly) == Mode.funOnly) { // 二进制比较 判断是否需要函数绑定\r\n                this.#bindRoot();\r\n            }\r\n        }\r\n\r\n        // 渲染完成\r\n        this.#rendered = true;\r\n    }\r\n\r\n    /**\r\n     * 用于渲染html的数据\r\n     */\r\n    public get $data(): any {\r\n        return this.#data;\r\n    }\r\n    public set $data(value: any) {\r\n        if ((this.#mode & Mode.propOnly) == Mode.propOnly) { // 二进制比较 判断是否需要属性绑定\r\n            this.#data = this.#defineReactive(value);\r\n            this.#refresh();\r\n        }\r\n        else {\r\n            this.#data = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对象劫持\r\n     * @param {any} value \r\n     * @returns {any}\r\n     */\r\n    #defineReactive(value: any): any {\r\n        if (typeof value === 'object') {\r\n            Object.keys(value).forEach((key) => {\r\n                value[key] = this.#defineReactive(value[key]);\r\n            });\r\n            return new Proxy(value, {\r\n                set: (obj, p, val) => {\r\n                    // 重新劫持\r\n                    obj[p] = this.#defineReactive(val);\r\n                    // 刷新\r\n                    // this.#refresh();\r\n                    this.#delayRefresh();\r\n                    return true;\r\n                },\r\n                // get: (obj, p) => {\r\n                //     // 判断是否需要刷新dom\r\n                //     return obj[p];\r\n                // },\r\n            });\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    #refreshing: boolean = false;\r\n    /**\r\n     * 延迟执行刷新 防抖 \r\n     * 主要是防止数组的length也会触发刷新\r\n     * @returns \r\n     */\r\n    #delayRefresh() {\r\n        if (this.#refreshing) {\r\n            return;\r\n        }\r\n        this.#refreshing = true;\r\n        timerFunc(() => {\r\n            this.#refresh();\r\n            this.#refreshing = false;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 刷新所有 #labelTag 标签内容\r\n     * {{}}已经被 #labelTag 标签替换\r\n     */\r\n    #refresh() {\r\n        // 绑定属性\r\n        const atts = ['s-value', 's-src'];\r\n        atts.forEach(att => {\r\n            this.#bindAtt(att);\r\n        })\r\n\r\n        // 更新dom\r\n        const labels: any = this.querySelectorAll(this.#labelTag);\r\n        labels.forEach((label: any) => {\r\n            // 获取属性\r\n            const value = this.#getValue(label.origin);\r\n            // 判断属性是否变化，变化则更新\r\n            if (String(value) !== label.innerHTML) {\r\n                label.innerHTML = value;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 绑定属性\r\n     * @param att 需要绑定的属性 如s-value\r\n     */\r\n    #bindAtt(att: string) {\r\n        const nodes: any = this.querySelectorAll(`[${att}]`);\r\n        nodes.forEach((element: any) => {\r\n            // 获取属性\r\n            const key = element.getAttribute(att);\r\n            const _att = att.replace('s-', ''); // 真实属性\r\n            const value = this.#getValue(key);\r\n            // 判断属性是否变化，变化则更新\r\n            if (value !== element[_att]) {\r\n                element[_att] = value;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取指定属性值\r\n     * @param {string} origin 需要获取的属性 如a.b\r\n     * @returns 对应属性的值\r\n     */\r\n    #getValue(origin: string) {\r\n        try {\r\n            return origin.split('.').reduce((data: any, val: string) => {\r\n                return data[val];\r\n            }, this.$data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置$data中的属性\r\n     * @param key \r\n     * @param value \r\n     */\r\n    #setValue(key: string, value: any) {\r\n        let data = this.$data;\r\n        let array = key.split('.');\r\n        for (let i = 0; i < array.length; i++) {\r\n            const k = array[i];\r\n            if (i == array.length - 1) {\r\n                data[k] = value;\r\n            }\r\n            else {\r\n                data = data[k];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 给dom绑定$this，指向当前组件\r\n     */\r\n    #bindRoot() {\r\n        // 这个方法比递归更快\r\n        const list = this.querySelectorAll('*');\r\n        list.forEach((element: any) => {\r\n            if (!element.$this) {\r\n                element.$this = this; //绑定this\r\n                element.$set = (key: string, value: any) => {\r\n                    this.#setValue(key, value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 组件初始化状态，设置多个用于防抖\r\n     * unInited 未初始化\r\n     * initing 正在初始化\r\n     * inited 已经初始化\r\n     */\r\n    #state: 'unInited' | 'initing' | 'inited' = \"unInited\";\r\n    /**\r\n     * 组件初始化方法，只初始化一次\r\n     * 需要判断所有必要条件添加完成再进行初始化\r\n     */\r\n    async #onInit() {\r\n        if (!this.#rendered) { // 尚未渲染完成\r\n            return;\r\n        }\r\n\r\n        if (this.#state === 'initing' || this.#state === 'inited') {\r\n            return;\r\n        }\r\n\r\n        if (this.isReady()) {\r\n            this.#state = 'initing';\r\n            this.loading = true;\r\n            await this.onInit();\r\n            this.loading = false;\r\n            this.#state = 'inited';\r\n            this.afterInit();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否可以开始初始化，该方法可以被重写\r\n     * @returns 是否可以开始初始化\r\n     */\r\n    public isReady(): boolean {\r\n        return !!(this.map && this.mapView && this.mapConfig && (this.config || !this.manifest.hasConfig));\r\n    }\r\n\r\n    /**\r\n     * 组件初始化方法\r\n     */\r\n    async onInit() { }\r\n\r\n    /**\r\n     * 初始化完成之后调用的方法，该方法可以被重写\r\n     */\r\n    afterInit() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 当组件被打开\r\n     */\r\n    onOpen() { }\r\n\r\n    /**\r\n     * 当组件被关闭\r\n     */\r\n    onClose() { }\r\n\r\n\r\n}","/**\r\n * 从位置获取样式对象\r\n * 位置可以包含6个属性：左、上、右、下、宽、高\r\n * @param position \r\n * @returns \r\n */\r\nexport const getPositionStyle = (ps: any): any => {\r\n    let style: any = {};\r\n\r\n    const keys = ['left', 'top', 'right', 'bottom', 'width', 'height',\r\n        'margin', 'margin-left', 'margin-top', 'margin-right', 'margin-bottom',\r\n        'padding', 'padding-left', 'padding-top', 'padding-right', 'padding-bottom',\r\n        'z-index'\r\n    ];\r\n\r\n    keys.forEach(key => {\r\n        if (typeof ps[key] === 'number') {\r\n            style[key] = ps[key] + 'px';\r\n        }\r\n        else if (typeof ps[key] !== 'undefined') {\r\n            style[key] = ps[key];\r\n        }\r\n    });\r\n\r\n    // if (typeof ps.zIndex === 'undefined') {\r\n    //     //set zindex=auto instead of 0, because inner dom of widget may need to overlay other widget\r\n    //     //that has the same zindex.\r\n    //     style['z-index'] = 'auto';\r\n    // }\r\n    return style;\r\n};\r\n\r\n\r\n/**\r\n * 样式转换成字符串\r\n * @param style \r\n * @returns {string}\r\n */\r\nexport const styleToString = (style: any): string => {\r\n    let str = '';\r\n    for (const key in style) {\r\n        if (style.hasOwnProperty(key)) {\r\n            str += `${key}:${style[key]};`;\r\n        }\r\n    }\r\n    return str;\r\n}\r\n\r\n\r\n","import { Component } from \"../../decorators/component\";\r\nimport BaseWidget from \"../../base/base-widget\";\r\n\r\n// 组件的样式\r\nimport './widget-manager.scss';\r\nimport { getPositionStyle, styleToString } from \"../../utils/style\";\r\nimport { WidgetConfig } from \"../interface\";\r\n\r\n\r\n@Component({\r\n    tagName: 'webgis-widget-manager',\r\n    className: 'webgis-widget-manager',\r\n    hasConfig: true\r\n})\r\n/**\r\n * 组件管理器，用于加载所在地图的组件\r\n */\r\nexport class WidgetManager extends BaseWidget {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async onInit() {\r\n        this.config.forEach((_config: WidgetConfig) => {\r\n            this.addWidget(_config);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 添加参数默认值\r\n     * @param {WidgetConfig} widgetConfig \r\n     * @returns {WidgetConfig}\r\n     */\r\n    #getDefault(widgetConfig: WidgetConfig): WidgetConfig {\r\n        const d: WidgetConfig = {\r\n            label: \"\",\r\n            tagName: \"\",\r\n            position: {},\r\n            inPanel: false,\r\n            icon: \"\",\r\n            config: {}\r\n        };\r\n        widgetConfig = Object.assign(d, widgetConfig);\r\n        widgetConfig.position = Object.assign({\r\n            left: 'auto',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            top: 'auto',\r\n            /** 不需要设置默认宽高 */\r\n            // width: 'auto',\r\n            // height: 'auto',\r\n            // 'z-index': 1\r\n        }, getPositionStyle(widgetConfig.position));\r\n        return widgetConfig;\r\n    }\r\n\r\n    /**\r\n     * 添加widget到当前dom\r\n     * @param {WidgetConfig}_config \r\n     */\r\n    addWidget(_config: WidgetConfig) {\r\n        _config = this.#getDefault(_config);\r\n        try {\r\n            // 生成图标\r\n            if (_config.inPanel) {\r\n                const icon = this.createIcon(_config);\r\n                // 渲染图标\r\n                this.appendChild(icon);\r\n            }\r\n            // 创建widget\r\n            else {\r\n                const widget = this.createWidget(_config);\r\n                // 渲染widget\r\n                this.appendChild(widget);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建一个widget图标\r\n     * @param {WidgetConfig} _config \r\n     * @returns {BaseWidget}\r\n     */\r\n    createIcon(_config: WidgetConfig): BaseWidget {\r\n        const icon = document.createElement('webgis-widget-icon') as BaseWidget;\r\n        icon.startup({\r\n            mapView: this.mapView,\r\n            map: this.map,\r\n            config: _config,\r\n            mapConfig: this.mapConfig\r\n        });\r\n\r\n        // 不需要宽高\r\n        const { width, height, ...position } = _config.position;\r\n        const styleString = styleToString(position);\r\n        icon.setAttribute('style', styleString);\r\n        // icon.style.zIndex = '2';\r\n\r\n        icon.title = _config.label || _config.tagName;\r\n        return icon;\r\n    }\r\n\r\n    /**\r\n     * 创建一个widget\r\n     * @param {WidgetConfig}_config \r\n     * @returns {BaseWidget}\r\n     */\r\n    createWidget(_config: WidgetConfig): BaseWidget {\r\n        if (!_config.tagName) {\r\n            throw new Error(`tagName不能为空`);\r\n        }\r\n        const widget = document.createElement(_config.tagName) as BaseWidget;\r\n        if (!widget.startup) {\r\n            throw new Error(`没有找到tagName为${_config.tagName}的组件`);\r\n        }\r\n        widget.startup({\r\n            mapView: this.mapView,\r\n            map: this.map,\r\n            config: _config.config,\r\n            mapConfig: this.mapConfig\r\n        });\r\n\r\n        const position = _config.position;\r\n        const styleString = styleToString(position);\r\n        widget.setAttribute('style', styleString);\r\n        widget.style.zIndex = widget.style.zIndex || '1';\r\n\r\n        return widget;\r\n    }\r\n\r\n}\r\n","export default \"<div>\\r\\n    <!-- 图标 -->\\r\\n    <div class=\\\"widget-icon\\\" onclick=\\\"$this.iconClick(event)\\\">\\r\\n        <img s-src=\\\"icon\\\">\\r\\n    </div>\\r\\n    <!-- 组件 -->\\r\\n    <div class=\\\"widget-panel\\\">\\r\\n        <!-- 标题 -->\\r\\n        <div class=\\\"widget-header\\\">\\r\\n            <div class=\\\"widget-label\\\"></div>\\r\\n            <div class=\\\"close-btn\\\" onclick=\\\"$this.closeWidget()\\\"></div>\\r\\n        </div>\\r\\n        <!-- 内容 -->\\r\\n        <div class=\\\"widget-content\\\"></div>\\r\\n    </div>\\r\\n</div>\"","\r\nexport default class DomGeometry {\r\n\r\n    static getPosition(node: HTMLElement | Element, includeScroll: boolean) {\r\n        // summary:\r\n        //\t\tGets the position and size of the passed element relative to\r\n        //\t\tthe viewport (if includeScroll==false), or relative to the\r\n        //\t\tdocument root (if includeScroll==true).\r\n        //\r\n        // description:\r\n        //\t\tReturns an object of the form:\r\n        //\t\t`{ x: 100, y: 300, w: 20, h: 15 }`.\r\n        //\t\tIf includeScroll==true, the x and y values will include any\r\n        //\t\tdocument offsets that may affect the position relative to the\r\n        //\t\tviewport.\r\n        //\t\tUses the border-box model (inclusive of border and padding but\r\n        //\t\tnot margin).  Does not act as a setter.\r\n        // node: DOMNode|String\r\n        // includeScroll: Boolean?\r\n        // returns: Object\r\n\r\n        var ret = this.getBoundingClientRect(node);\r\n        ret = { x: ret.left, y: ret.top, w: ret.right - ret.left, h: ret.bottom - ret.top }\r\n\r\n        // account for document scrolling\r\n        // if offsetParent is used, ret value already includes scroll position\r\n        // so we may have to actually remove that value if !includeScroll\r\n        if (includeScroll) {\r\n            var scroll = this.docScroll(node.ownerDocument);\r\n            ret.x += scroll.x;\r\n            ret.y += scroll.y;\r\n        }\r\n\r\n        return ret; // Object\r\n    };\r\n\r\n    static getBoundingClientRect(/*DomNode*/ node: HTMLElement | Element): any {\r\n        // summary:\r\n        //\t\tGets the bounding client rectangle for a dom node.\r\n        // node: DOMNode\r\n\r\n        // This will return the result of node.getBoundingClientRect if node is in the dom, and\r\n        // {x:0, y:0, width:0, height:0, top:0, right:0, bottom:0, left:0} if it throws an error or the node is not on the dom\r\n        // This will handle when IE throws an error or Edge returns an empty object when node is not on the dom\r\n\r\n        var retEmpty = { x: 0, y: 0, width: 0, height: 0, top: 0, right: 0, bottom: 0, left: 0 },\r\n            ret: any;\r\n\r\n        try {\r\n            ret = node.getBoundingClientRect();\r\n        } catch (e) {\r\n            // IE throws an Unspecified Error if the node is not in the dom. Handle this by returning an object with 0 values\r\n            return retEmpty;\r\n        }\r\n\r\n        // Edge returns an empty object if the node is not in the dom. Handle this by returning an object with 0 values\r\n        if (typeof ret.left === \"undefined\") { return retEmpty; }\r\n\r\n        return ret;\r\n    }\r\n\r\n    static docScroll(/*Document?*/ doc: any) {\r\n        var node = doc.parentWindow || doc.defaultView;\r\n\r\n        if (\"pageXOffset\" in node) {\r\n            return { x: node.pageXOffset, y: node.pageYOffset };\r\n        }\r\n        else if (doc.documentElement) {\r\n            return { x: doc.documentElement.scrollLeft, y: doc.documentElement.scrollTop };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    };\r\n\r\n\r\n    static getPadBorderExtents(/*DomNode*/ node: HTMLElement) {\r\n        let style = window.getComputedStyle(node);\r\n        return {\r\n            l: parseInt(style.paddingLeft) + parseInt(style.borderLeft),\r\n            t: parseInt(style.paddingTop) + parseInt(style.borderTop),\r\n            r: parseInt(style.paddingRight) + parseInt(style.borderRight),\r\n            b: parseInt(style.paddingBottom) + parseInt(style.borderBottom),\r\n            w: parseInt(style.paddingLeft) + parseInt(style.borderLeft) + parseInt(style.paddingRight) + parseInt(style.borderRight),\r\n            h: parseInt(style.paddingTop) + parseInt(style.borderTop) + parseInt(style.paddingBottom) + parseInt(style.borderBottom)\r\n        };\r\n    };\r\n\r\n    static getMarginExtents(/*DomNode*/ node: HTMLElement) {\r\n        let style = window.getComputedStyle(node);\r\n        return {\r\n            l: parseInt(style.marginLeft),\r\n            t: parseInt(style.marginTop),\r\n            r: parseInt(style.marginRight),\r\n            b: parseInt(style.marginBottom),\r\n            w: parseInt(style.marginLeft) + parseInt(style.marginRight),\r\n            h: parseInt(style.marginTop) + parseInt(style.marginBottom)\r\n        };\r\n    }\r\n}","import './css/resizeHandle.scss';\r\nimport DomGeometry from './DomGeometry';\r\n\r\n// 配置参数接口\r\ninterface ResizeHandleOptions {\r\n    minSize: { w: number; h: number; };\r\n    maxSize: { w: number; h: number; };\r\n    constrainMax: boolean;\r\n    fixedAspect: boolean;\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * 可调整大小的控件，可以拖拽改变大小。\r\n * @class\r\n * @param {HTMLElement} container - 需要添加resizeHandle的容器\r\n * @param {ResizeHandleOptions} options - 配置项\r\n * */\r\nexport default class ResizeHandle {\r\n\r\n    // 拖拽控件的dom节点\r\n    domNode: HTMLElement | undefined;\r\n\r\n    // 拖拽控件的容器 \r\n    container: HTMLElement;\r\n\r\n    // 最小尺寸\r\n    minSize = {\r\n        w: 20,\r\n        h: 20\r\n    }\r\n\r\n    // 切换此小部件是否关心maxHeight和maxWidth\r\n    constrainMax: boolean = false;\r\n    // 最大尺寸\r\n    maxSize = {\r\n        w: 0,\r\n        h: 0\r\n    }\r\n\r\n    // 是否固定宽高比\r\n    fixedAspect: boolean = false;\r\n\r\n    // 开始的尺寸\r\n    startSize: {\r\n        w: any;\r\n        h: any;\r\n        pbw: any;\r\n        pbh: any;\r\n        mw: any;\r\n        mh: any;\r\n    } | undefined;\r\n\r\n    // 是否允许修改 x y 尺寸\r\n    _resizeX: boolean = true;\r\n    _resizeY: boolean = true;\r\n\r\n    // 鼠标起始点\r\n    startPoint: { x: number; y: number; } = { x: 0, y: 0 };\r\n    // domNode的起始位置\r\n    startPosition: { l: any; t: any; } | undefined;\r\n    private _isSizing: boolean = false;\r\n\r\n\r\n    constructor(container: HTMLElement, options?: ResizeHandleOptions) {\r\n        this.container = container;\r\n        if (options) {\r\n            this.minSize = options.minSize || this.minSize;\r\n            this.maxSize = options.maxSize || this.maxSize;\r\n            this.constrainMax = options.constrainMax || this.constrainMax;\r\n            this.fixedAspect = options.fixedAspect || this.fixedAspect;\r\n        }\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.className = 'resize-handle';\r\n        this.container.appendChild(this.domNode);\r\n\r\n        this.domNode.addEventListener('mousedown', (event) => this._beginSizing(event));\r\n    }\r\n\r\n    _beginSizing(e: MouseEvent) {\r\n        e.preventDefault();\r\n        if (this._isSizing) { return; }\r\n        this.startPoint = { x: e.clientX, y: e.clientY };\r\n\r\n        let p = DomGeometry.getPosition(this.container, true);\r\n        this.startPosition = { l: p.x, t: p.y };\r\n\r\n        let padborder = DomGeometry.getPadBorderExtents(this.container);\r\n        let margin = DomGeometry.getMarginExtents(this.container);\r\n\r\n        this.startSize = {\r\n            w: this.container.offsetWidth,\r\n            h: this.container.offsetHeight,\r\n            //ResizeHelper.resize expects a bounding box of the\r\n            //border box, so let's keep track of padding/border\r\n            //width/height as well\r\n            pbw: padborder.w, pbh: padborder.h,\r\n            mw: margin.w, mh: margin.h\r\n        };\r\n\r\n        this._isSizing = true;\r\n\r\n        // 用于绑定和移除事件\r\n        this._endSizing = this._endSizing.bind(this);\r\n        this._updateSizing = this._updateSizing.bind(this);\r\n\r\n        document.addEventListener('mouseup', this._endSizing);\r\n        document.addEventListener('mousemove', this._updateSizing);\r\n        e.stopPropagation();\r\n    }\r\n\r\n    _updateSizing(e: MouseEvent) {\r\n        e.preventDefault();\r\n        if (this._isSizing) {\r\n            let box = this._getNewCoords(e, this.startPosition);\r\n            let w = box.w, h = box.h;\r\n            if (w >= 0) {\r\n                w = Math.max(w - this.startSize?.pbw - this.startSize?.mw, 0);\r\n            }\r\n            if (h >= 0) {\r\n                h = Math.max(h - this.startSize?.pbh - this.startSize?.mh, 0);\r\n            }\r\n\r\n            this.container.style.width = w + 'px';\r\n            this.container.style.height = h + 'px';\r\n        }\r\n    }\r\n\r\n    _endSizing(e: MouseEvent) {\r\n        e.preventDefault();\r\n        this._isSizing = false;\r\n        document.removeEventListener('mouseup', this._endSizing);\r\n        document.removeEventListener('mousemove', this._updateSizing);\r\n    }\r\n\r\n    _getNewCoords(e: MouseEvent, startPosition: any) {\r\n\r\n        // On IE, if you move the mouse above/to the left of the object being resized,\r\n        // sometimes clientX/Y aren't set, apparently.  Just ignore the event.\r\n        try {\r\n            if (!e.clientX || !e.clientY) { return false; }\r\n        } catch (err) {\r\n            // sometimes you get an exception accessing above fields...\r\n            return false;\r\n        }\r\n\r\n        var dx = this.startPoint?.x - e.clientX,\r\n            dy = this.startPoint?.y - e.clientY,\r\n            newW = this.startSize?.w - (this._resizeX ? dx : 0),\r\n            newH = this.startSize?.h - (this._resizeY ? dy : 0),\r\n            r = this._checkConstraints(newW, newH);\r\n\r\n        startPosition = (startPosition || this.startPosition);\r\n        if (startPosition && this._resizeX) {\r\n            // adjust x position for RtoL\r\n            r.l = startPosition.l + dx;\r\n            if (r.w != newW) {\r\n                r.l += (newW - r.w);\r\n            }\r\n            r.t = startPosition.t;\r\n        }\r\n\r\n        r.w += this.startSize?.pbw;\r\n        r.h += this.startSize?.pbh;\r\n\r\n        return r; // Object\r\n    }\r\n\r\n    // 检查尺寸是否超出最大值和最小值\r\n    _checkConstraints(newW: number, newH: number): any {\r\n        // summary:\r\n        //\t\tfilter through the various possible constaint possibilities.\r\n\r\n        // minimum size check\r\n        if (this.minSize) {\r\n            var tm = this.minSize;\r\n            if (newW < tm.w) {\r\n                newW = tm.w;\r\n            }\r\n            if (newH < tm.h) {\r\n                newH = tm.h;\r\n            }\r\n        }\r\n\r\n        // maximum size check:\r\n        if (this.constrainMax && this.maxSize) {\r\n            var ms = this.maxSize;\r\n            if (newW > ms.w) {\r\n                newW = ms.w;\r\n            }\r\n            if (newH > ms.h) {\r\n                newH = ms.h;\r\n            }\r\n        }\r\n\r\n        if (this.fixedAspect) {\r\n            var w = this.startSize?.w, h = this.startSize?.h,\r\n                delta = w * newH - h * newW;\r\n            if (delta < 0) {\r\n                newW = newH * w / h;\r\n            } else if (delta > 0) {\r\n                newH = newW * h / w;\r\n            }\r\n        }\r\n\r\n        return { w: newW, h: newH }; // Object\r\n    }\r\n\r\n}","import { Component } from \"../../decorators/component\";\r\nimport BaseWidget from \"../../base/base-widget\";\r\nimport { WidgetConfig } from \"../interface\";\r\nimport { styleToString } from \"../../utils/style\";\r\n\r\n\r\n// 组件的样式\r\nimport './widget-icon.scss';\r\n// 组件的模板\r\nimport template from './widget-icon.html?raw';\r\nimport DomGeometry from \"../../base/layout/DomGeometry\";\r\nimport ResizeHandle from \"../../base/layout/ResizeHandle\";\r\n\r\n@Component({\r\n    tagName: 'webgis-widget-icon',\r\n    className: 'webgis-widget-icon',\r\n    template: template,\r\n    hasConfig: true\r\n})\r\n/**\r\n * 组件的图标，用于在\r\n */\r\nexport class WidgetIcon extends BaseWidget {\r\n    #panel: any = null;\r\n    #widget: BaseWidget | null = null;\r\n    #isOpen: boolean = false;\r\n    group: string = 'default'; // 所在组，同组互斥\r\n\r\n    // 鼠标起始点\r\n    #startPoint: { x: number; y: number; } = { x: 0, y: 0 };\r\n    // panel的起始位置\r\n    #startPosition: { x: number; y: number; w: number; h: number; } = {\r\n        x: 0,\r\n        y: 0,\r\n        w: 0,\r\n        h: 0\r\n    };\r\n    #observer: ResizeObserver; // 观察器\r\n\r\n    constructor() {\r\n        super();\r\n        this.#observer = new ResizeObserver(this.resize.bind(this));\r\n    }\r\n\r\n    async onInit() {\r\n        // 设置图标\r\n        this.$data = {\r\n            icon: `${this.config.icon || 'icons/default.png'}`\r\n        }\r\n        this.group = this.config.group || 'default';\r\n\r\n        // 添加默认宽高\r\n        this.config.position = Object.assign({\r\n            width: '300px',\r\n            height: '300px'\r\n        }, this.config.position);\r\n    }\r\n\r\n    // 初始化Panel\r\n    initPanel() {\r\n        this.#widget = this.createWidget(this.config);\r\n        this.#panel = this.getElementsByClassName('widget-panel')[0];\r\n\r\n        // 设置样式 只需要宽高\r\n        const { width, height } = this.config.position;\r\n        const styleString = styleToString({\r\n            width,\r\n            height\r\n        });\r\n        this.#panel.setAttribute('style', styleString);\r\n\r\n        // 添加标题内容\r\n        let title = this.#panel.getElementsByClassName('widget-label')[0];\r\n        title.innerHTML = this.title;\r\n\r\n        let content = this.#panel.getElementsByClassName('widget-content')[0];\r\n        content.appendChild(this.#widget);\r\n\r\n        // 添加移动事件\r\n        let header = this.#panel.getElementsByClassName('widget-header')[0];\r\n        header.addEventListener('mousedown', this.onMouseDown.bind(this));\r\n\r\n        // 添加缩放\r\n        new ResizeHandle(this.#panel);\r\n\r\n        // 获取panel的初始位置\r\n        const panelP = this.getPanelXY();\r\n\r\n        // 计算初始位置\r\n        this.setPosition(panelP.left, panelP.top);\r\n    }\r\n\r\n\r\n    // 根据图标所在位置计算panel的初始位置\r\n    // 最终的位置只要left 和 top\r\n    getPanelXY() {\r\n        let position = this.config.panel?.position || {};\r\n        // 容器position\r\n        const p = DomGeometry.getPosition(this.parentElement as HTMLElement, true);\r\n        // 图标的位置\r\n        const icon = this.getElementsByClassName('widget-icon')[0];\r\n        const iconP = DomGeometry.getPosition(icon, true);\r\n        // panel的宽高\r\n        const panelP = DomGeometry.getPosition(this.#panel, true);\r\n\r\n        // 计算left 和top\r\n        let left, top;\r\n        if (position.left ?? false) {\r\n            left = parseInt(position.left);\r\n        }\r\n        else if (position.right ?? false) {\r\n            left = p.w - panelP.w - parseInt(position.right);\r\n        }\r\n        // 如果图标的位置超过容器宽度的一半，则在左侧展示panel，否则在右侧展示\r\n        else if (iconP.x > p.w / 2) {\r\n            left = iconP.x - panelP.w - 5;\r\n        }\r\n        // 默认位置\r\n        else {\r\n            left = iconP.x + iconP.w + 5;\r\n        }\r\n\r\n        // 计算高度\r\n        if (position.top ?? false) {\r\n            top = parseInt(position.top);\r\n        }\r\n        else if (position.bottom ?? false) {\r\n            top = p.w - panelP.h - parseInt(position.bottom);\r\n        }\r\n        else {\r\n            top = iconP.y;\r\n        }\r\n\r\n        return {\r\n            left: left,\r\n            top: top\r\n        };\r\n    }\r\n\r\n    iconClick() {\r\n        this.#isOpen ? this.closeWidget() : this.openWidget();\r\n    }\r\n\r\n    openWidget() {\r\n        this.closeOthers();\r\n\r\n        this.classList.add('webgis-widget-icon-open');\r\n        if (!this.#widget) {\r\n            this.initPanel();\r\n        }\r\n        this.#widget?.onOpen();\r\n        this.#isOpen = true;\r\n        // 添加容器变化事件\r\n        this.#observer.observe(this.parentElement as HTMLElement);\r\n    }\r\n\r\n    closeWidget() {\r\n        this.classList.remove('webgis-widget-icon-open');\r\n        // 取消容器变化事件\r\n        this.#observer.unobserve(this.parentElement as HTMLElement);\r\n        this.#widget?.onClose();\r\n        this.#isOpen = false;\r\n    }\r\n\r\n    // 关闭其他同组的widget\r\n    closeOthers() {\r\n        const others = this.parentNode?.querySelectorAll('webgis-widget-icon');\r\n        others?.forEach((item: any) => {\r\n            if (this.group == item.group) {\r\n                item.closeWidget();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 创建一个widget\r\n     * @param {WidgetConfig}_config \r\n     * @returns {BaseWidget}\r\n     */\r\n    createWidget(_config: WidgetConfig): BaseWidget {\r\n        if (!_config.tagName) {\r\n            throw new Error(`tagName不能为空`);\r\n        }\r\n        const widget = document.createElement(_config.tagName) as BaseWidget;\r\n        if (!widget.startup) {\r\n            throw new Error(`没有找到tagName为${_config.tagName}的组件`);\r\n        }\r\n        widget.startup({\r\n            mapView: this.mapView,\r\n            map: this.map,\r\n            config: _config.config,\r\n            mapConfig: this.mapConfig\r\n        });\r\n        return widget;\r\n    }\r\n\r\n    // 销毁\r\n    destroy() {\r\n        this.#observer.disconnect();\r\n        this.remove();\r\n    }\r\n\r\n    // 重置位置\r\n    resize() {\r\n        this.#startPosition = DomGeometry.getPosition(this.#panel, true);\r\n        this.setPosition(this.#startPosition.x, this.#startPosition.y);\r\n    }\r\n\r\n    onMouseDown(e: MouseEvent) {\r\n        e.preventDefault();\r\n        this.#panel.classList.add('panel-dragging');\r\n\r\n        this.#startPoint = { x: e.clientX, y: e.clientY };\r\n        this.#startPosition = DomGeometry.getPosition(this.#panel, true);\r\n\r\n        // 用于绑定和移除事件\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onMouseUp = this.onMouseUp.bind(this);\r\n\r\n        document.addEventListener('mousemove', this.onMouseMove);\r\n        document.addEventListener('mouseup', this.onMouseUp);\r\n    }\r\n\r\n    onMouseMove(e: MouseEvent) {\r\n        e.preventDefault();\r\n        let dx = this.#startPoint.x - e.clientX;\r\n        let dy = this.#startPoint.y - e.clientY;\r\n\r\n        let x = this.#startPosition.x - dx;\r\n        let y = this.#startPosition.y - dy;\r\n\r\n        this.setPosition(x, y);\r\n    }\r\n\r\n    setPosition(x: number, y: number) {\r\n        let p = this.checkConstraints(x, y);\r\n        // 获取当前组件的相对位置\r\n        let position = DomGeometry.getPosition(this, true);\r\n        // 设置的时候需要减去图标所在的位置\r\n        this.#panel.style.left = (p.x - position.x) + 'px';\r\n        this.#panel.style.top = (p.y - position.y) + 'px';\r\n    }\r\n\r\n    onMouseUp(e: MouseEvent) {\r\n        e.preventDefault();\r\n        this.#panel.classList.remove('panel-dragging');\r\n        document.removeEventListener('mousemove', this.onMouseMove);\r\n        document.removeEventListener('mouseup', this.onMouseUp);\r\n    }\r\n\r\n    // 检查约束条件\r\n    checkConstraints(x: number, y: number) {\r\n        // 容器范围\r\n        const p = DomGeometry.getPosition(this.parentElement as HTMLElement, true);\r\n        // 要保证panel留在容器范围内\r\n        const mixX = p.x;\r\n        const maxX = p.w - this.#startPosition.w;\r\n        const mixY = p.y;\r\n        const maxY = p.h - this.#startPosition.h;\r\n        x = Math.max(mixX, Math.min(maxX, x));\r\n        y = Math.max(mixY, Math.min(maxY, y));\r\n        return { x: x, y: y };\r\n    }\r\n}\r\n","// 样式\r\nimport './themes/default.scss';\r\nimport { init } from './utils/init';\r\n\r\n// 基础标签\r\nexport { BaseLabel } from './base/base-label';\r\n\r\n// 管理器\r\nexport { WidgetManager } from './manager/widget-manager/widget-manager';\r\nexport { WidgetIcon } from './manager/widget-icon/widget-icon';\r\n\r\n\r\n// 初始化\r\ninit().then(() => {\r\n    console.log('初始化完成');\r\n});"],"names":["Loader","src","isModule","resolve","script","href","link","url","init","isDebug","configUrl","config","request","key","item","BaseLabel","__privateAdd","_origin","__privateSet","__privateGet","Mode","Mode2","Component","manifest","target","getManifest","timerFunc","callback","BaseWidget","_loadConfig","_onLoading","_initDom","_defineReactive","_delayRefresh","_refresh","_bindAtt","_getValue","_setValue","_bindRoot","_onInit","_mapConfig","_mapView","_map","_config","_loading","_data","_labelTag","_rendered","_mode","_refreshing","_state","__privateMethod","loadConfig_fn","initDom_fn","onInit_fn","args","value","onLoading_fn","defineReactive_fn","refresh_fn","response","className","template","bindRoot_fn","obj","p","val","delayRefresh_fn","att","bindAtt_fn","label","getValue_fn","element","_att","origin","data","error","setValue_fn","array","i","k","getPositionStyle","ps","style","styleToString","str","WidgetManager","_a","_getDefault","getDefault_fn","icon","widget","width","height","position","styleString","widgetConfig","__decorateClass","DomGeometry","node","includeScroll","ret","scroll","retEmpty","doc","ResizeHandle","container","options","__publicField","event","padborder","margin","box","w","h","_b","_c","_d","startPosition","dx","dy","newW","newH","r","_e","_f","tm","ms","delta","WidgetIcon","_panel","_widget","_isOpen","_startPoint","_startPosition","_observer","title","panelP","iconP","left","top","others","x","y","mixX","maxX","mixY","maxY"],"mappings":"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"}