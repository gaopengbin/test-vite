{"version":3,"file":"main.umd.cjs","sources":["../../src/utils/init.ts","../../src/base/base-label.ts","../../src/base/enums.ts","../../src/decorators/component.ts","../../src/utils/tools.ts","../../src/base/base-widget.ts","../../src/utils/style.ts","../../src/manager/widget-manager/widget-manager.ts","../../src/manager/widget-icon/widget-icon.html?raw","../../src/base/layout/DomGeometry.ts","../../src/base/layout/ResizeHandle.ts","../../src/manager/widget-icon/widget-icon.ts","../../src/main.ts"],"sourcesContent":["\r\n/**\r\n * 用来加载各种文件\r\n */\r\nexport class Loader {\r\n    /**\r\n     * 加载js文件\r\n     * @param src 需要加载的js的地址\r\n     * @param isModule 是否是ES6\r\n     * @returns \r\n     */\r\n    static loadScript(src: string, isModule = false) {\r\n        return new Promise((resolve) => {\r\n            if (src === '') {\r\n                resolve(false);\r\n                return;\r\n            }\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.async = false;// 保证js顺序执行\r\n            script.onload = () => {\r\n                script.remove();\r\n                resolve(true);\r\n            }\r\n            script.onerror = () => {\r\n                script.remove();\r\n                resolve(false);\r\n            }\r\n            // script.crossOrigin = 'anonymous';\r\n            isModule && (script.type = 'module');\r\n            script.src = src;\r\n            if (document.head.append) {\r\n                document.head.append(script);\r\n            } else {\r\n                document.getElementsByTagName('head')[0].appendChild(script);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载css文件\r\n     * @param href \r\n     * @returns \r\n     */\r\n    static loadCSS(href: string) {\r\n        return new Promise((resolve) => {\r\n            if (href === '') {\r\n                resolve(false);\r\n                return;\r\n            }\r\n\r\n            const link = document.createElement('link');\r\n            link.rel = 'stylesheet';\r\n            link.href = href;\r\n            link.onload = () => {\r\n                // link.remove();\r\n                resolve(true);\r\n            }\r\n            link.onerror = () => {\r\n                // link.remove();\r\n                resolve(false);\r\n            }\r\n            // link.crossOrigin = 'anonymous';\r\n            if (document.head.append) {\r\n                document.head.append(link);\r\n            } else {\r\n                document.getElementsByTagName('head')[0].appendChild(link);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载json\r\n     * @param url \r\n     * @returns \r\n     */\r\n    static async loadJSON(url: string) {\r\n        const response = await fetch(url);\r\n        return await response.json();\r\n    }\r\n}\r\n\r\n/**\r\n * 初始化\r\n */\r\nexport const init = async () => {\r\n    // 加载配置文件\r\n    const isDebug = (window as any).isDebug;\r\n    let configUrl = 'configs/setting.json';\r\n    if (isDebug) { // 调试模式\r\n        configUrl = 'configs/debug.json';\r\n    }\r\n\r\n    const config = await Loader.loadJSON(configUrl);\r\n    // 按顺序加载css js ts 等文件\r\n    let request: any[] = [];\r\n    config.include.forEach((key: string) => {\r\n        const module = config.modules[key];\r\n        module.forEach((item: any) => {\r\n            switch (item.type) {\r\n                case 'css':\r\n                    request.push(Loader.loadCSS(item.url));\r\n                    break;\r\n                case 'js':\r\n                    request.push(Loader.loadScript(item.url));\r\n                    break;\r\n                case 'module':\r\n                    request.push(Loader.loadScript(item.url, true));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    });\r\n\r\n    await Promise.all(request);\r\n\r\n}\r\n","/**\r\n * 基础的标签\r\n * {{}}将会被替换成该标签\r\n */\r\nexport class BaseLabel extends HTMLElement {\r\n    /**\r\n     * 原始属性\r\n     */\r\n    #origin: string;\r\n    public get origin(): string {\r\n        return this.#origin;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#origin = this.innerHTML.trim();\r\n    }\r\n}\r\n\r\ncustomElements.define('w-l', BaseLabel);","/**\r\n * 组件模式枚举\r\n * none 不启用任何功能 | funOnly 只启用函数 | propOnly 只启用属性 | always 总是启用\r\n */\r\nexport enum Mode {\r\n    /** 不启用任何功能 */\r\n    none,\r\n    /** 只启用函数 */\r\n    funOnly,\r\n    /** 只启用属性 */\r\n    propOnly,\r\n    /** 总是启用 */\r\n    always\r\n}","import { Mode } from \"../base/enums\";\r\n\r\n/**\r\n * 组件的创建参数\r\n */\r\nexport interface Manifest {\r\n    /**\r\n     * 标签的名称\r\n     */\r\n    tagName: string;\r\n    /**\r\n     * css类名，默认和tagName一致\r\n     */\r\n    className?: string;\r\n    /**\r\n     * html模板\r\n     */\r\n    template?: string;\r\n    /**\r\n     * 是否有config，默认为否\r\n     */\r\n    hasConfig?: boolean;\r\n    /**\r\n     * 模式\r\n     * 不启用 | 只启用函数 | 只启用属性 | 总是启用\r\n     * 默认值为always\r\n     */\r\n    mode?: Mode\r\n}\r\n\r\n\r\n/**\r\n * 组件装饰器\r\n * @param {Manifest} manifest 装饰器的参数\r\n * @returns {any} Target object.\r\n */\r\nexport const Component = (manifest: Manifest): any => {\r\n    return (target: any) => {\r\n        target.prototype._manifest = getManifest(manifest);\r\n        // 创建标签\r\n        customElements.define(manifest.tagName, target as CustomElementConstructor);\r\n        return target as any;\r\n    };\r\n}\r\n\r\n/**\r\n * 给装饰器参数添加默认值\r\n * @param manifest 装饰器参数\r\n * @returns 添加默认值之后的装饰器参数\r\n */\r\nconst getManifest = (manifest: Manifest): Manifest => {\r\n    // 合成manifest，添加默认参数\r\n    manifest = Object.assign({\r\n        hasConfig: false,\r\n        mode: Mode.always\r\n    }, manifest);\r\n\r\n    return manifest;\r\n}","/**\r\n * 立即执行 主要用于防抖\r\n * 将指定函数放到队列中\r\n * @param {Function} callback \r\n */\r\nexport const timerFunc = (callback: any) => {\r\n    if (Promise) {\r\n        Promise.resolve().then(callback)\r\n    }\r\n    // 使用动画执行\r\n    else if (requestAnimationFrame) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        /**\r\n         * 使用setTimeout 可能会出现延迟\r\n         */\r\n        setTimeout(callback, 0);\r\n    }\r\n}","import { Manifest } from \"../decorators/component\";\r\nimport { Mode } from \"./enums\";\r\nimport { timerFunc } from \"../utils/tools\";\r\n\r\n\r\n/**\r\n * 初始化必要的参数\r\n */\r\ninterface StartInfo {\r\n    mapView: BaseWidget;\r\n    map: any;\r\n    config: object;\r\n    mapConfig: object;\r\n}\r\n\r\n\r\n/**\r\n * 组件原型\r\n */\r\nexport default class BaseWidget extends HTMLElement {\r\n    [x: string]: any; // 任意的string索引List\r\n    // 一些私有属性\r\n    #mapConfig?: object;\r\n    #mapView?: BaseWidget;\r\n    #map: any;\r\n    #config?: object;\r\n    #loading?: boolean;\r\n    #data: any;\r\n    #labelTag = 'w-l'; // label标签的名称\r\n    #rendered: boolean = false;// 渲染是否完成\r\n    #mode: Mode; //组件模式\r\n\r\n    constructor() {\r\n        super();\r\n        // 加载配置文件\r\n        if (this.manifest.hasConfig) {\r\n            this.#loadConfig(this.getAttribute('config') || this.getAttribute('configUrl'));\r\n        }\r\n\r\n        this.#mode = this.manifest.mode ?? Mode.always;\r\n        /**\r\n         * 防止出现如下错误：\r\n         *     Failed to construct 'CustomElement': The result must not have attributes\r\n         */\r\n        timerFunc(() => {\r\n            this.#initDom();\r\n            this.#onInit();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 手动启动初始化的方法\r\n     * @param args 初始化的必要参数\r\n     */\r\n    public startup(args: StartInfo) {\r\n        this.mapView = args.mapView;\r\n        this.map = args.map;\r\n        this.mapConfig = args.mapConfig;\r\n        this.config = args.config;\r\n    }\r\n\r\n    /**\r\n     * 组件的创建参数\r\n     */\r\n    public get manifest(): Manifest {\r\n        return this._manifest as Manifest;\r\n    }\r\n\r\n    /**\r\n     * 当前组件所在地图的配置 类似于之前的appConfig\r\n     */\r\n    public get mapConfig(): any {\r\n        return this.#mapConfig;\r\n    }\r\n    public set mapConfig(value: any) {\r\n        // mapConfig只设置一次，设置完调用组件初始化方法 #onInit\r\n        if (!this.#mapConfig && value) {\r\n            this.#mapConfig = value;\r\n            this.#onInit();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 组件所在地图的原型，如果组件本身为地图，则指向自身\r\n     */\r\n    public get mapView(): BaseWidget {\r\n        return this.#mapView as BaseWidget;\r\n    }\r\n    public set mapView(value: BaseWidget) {\r\n        // mapView只设置一次，设置完调用组件初始化方法 #onInit\r\n        if (!this.#mapView && value) {\r\n            this.#mapView = value;\r\n            this.#onInit();\r\n        }\r\n    }\r\n\r\n    /**\r\n      * 当前组件所在地图\r\n      */\r\n    public get map() {\r\n        return this.#map;\r\n    }\r\n    public set map(value: any) {\r\n        // map只设置一次，设置完调用组件初始化方法 #onInit\r\n        if (!this.#map && value) {\r\n            this.#map = value;\r\n            this.#onInit();\r\n        }\r\n    }\r\n\r\n    /**\r\n      * 当前组件的配置\r\n      */\r\n    public get config(): any {\r\n        return this.#config;\r\n    }\r\n    public set config(value: object) {\r\n        // 当config设置为string时，认为其是url\r\n        if (typeof value === 'string') {\r\n            this.#loadConfig(value);\r\n            return;\r\n        }\r\n        // 当config设置为object时，认为其是配置\r\n        else if (typeof value === 'object') {\r\n            // config只设置一次，设置完调用组件初始化方法 #onInit\r\n            if (!this.#config && value) {\r\n                this.#config = value;\r\n                this.#onInit();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载config\r\n     * 当config不存在时，从文件加载config\r\n     */\r\n    async #loadConfig(configUrl: string | null) {\r\n        // 绑定config\r\n        if (!this.config && configUrl) {\r\n            this.loading = true;\r\n            const response = await fetch(configUrl);\r\n            this.config = response && response.ok && await response.json() || {};\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载中\r\n     */\r\n    public get loading(): boolean {\r\n        return !!this.#loading;\r\n    }\r\n    public set loading(value: boolean) {\r\n        this.#loading = value;\r\n        this.#onLoading();\r\n    }\r\n\r\n    /**\r\n     * loading状态改变\r\n     */\r\n    #onLoading() {\r\n        if (this.loading) {\r\n            this.classList.add('loading');\r\n        }\r\n        else {\r\n            this.classList.remove('loading');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化方法，用于初始化Dom\r\n     */\r\n    #initDom() {\r\n        // 添加样式\r\n        const className = this.manifest.className || this.manifest.tagName;\r\n        this.classList.add(className);\r\n\r\n        // 加载dom内容\r\n        // 要实现事件绑定 双大括号绑定属性\r\n        if (this.manifest.template) {\r\n            let template = this.manifest.template;\r\n\r\n            if ((this.#mode & Mode.propOnly) == Mode.propOnly) { // 二进制比较 判断是否需要属性绑定\r\n                // 获取需要绑定的属性\r\n                // 同时将 {{}} 替换成 #labelTag以便实现局部更新\r\n                template = template.replace(/\\{\\{(.+?)\\}\\}/g, (...args) => {\r\n                    return `<${this.#labelTag}>${args[1]}</${this.#labelTag}>`;\r\n                });\r\n            }\r\n\r\n            this.innerHTML = template;\r\n\r\n            if ((this.#mode & Mode.funOnly) == Mode.funOnly) { // 二进制比较 判断是否需要函数绑定\r\n                this.#bindRoot();\r\n            }\r\n        }\r\n\r\n        // 渲染完成\r\n        this.#rendered = true;\r\n    }\r\n\r\n    /**\r\n     * 用于渲染html的数据\r\n     */\r\n    public get $data(): any {\r\n        return this.#data;\r\n    }\r\n    public set $data(value: any) {\r\n        if ((this.#mode & Mode.propOnly) == Mode.propOnly) { // 二进制比较 判断是否需要属性绑定\r\n            this.#data = this.#defineReactive(value);\r\n            this.#refresh();\r\n        }\r\n        else {\r\n            this.#data = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对象劫持\r\n     * @param {any} value \r\n     * @returns {any}\r\n     */\r\n    #defineReactive(value: any): any {\r\n        if (typeof value === 'object') {\r\n            Object.keys(value).forEach((key) => {\r\n                value[key] = this.#defineReactive(value[key]);\r\n            });\r\n            return new Proxy(value, {\r\n                set: (obj, p, val) => {\r\n                    // 重新劫持\r\n                    obj[p] = this.#defineReactive(val);\r\n                    // 刷新\r\n                    // this.#refresh();\r\n                    this.#delayRefresh();\r\n                    return true;\r\n                },\r\n                // get: (obj, p) => {\r\n                //     // 判断是否需要刷新dom\r\n                //     return obj[p];\r\n                // },\r\n            });\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    #refreshing: boolean = false;\r\n    /**\r\n     * 延迟执行刷新 防抖 \r\n     * 主要是防止数组的length也会触发刷新\r\n     * @returns \r\n     */\r\n    #delayRefresh() {\r\n        if (this.#refreshing) {\r\n            return;\r\n        }\r\n        this.#refreshing = true;\r\n        timerFunc(() => {\r\n            this.#refresh();\r\n            this.#refreshing = false;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 刷新所有 #labelTag 标签内容\r\n     * {{}}已经被 #labelTag 标签替换\r\n     */\r\n    #refresh() {\r\n        // 绑定属性\r\n        const atts = ['s-value', 's-src'];\r\n        atts.forEach(att => {\r\n            this.#bindAtt(att);\r\n        })\r\n\r\n        // 更新dom\r\n        const labels: any = this.querySelectorAll(this.#labelTag);\r\n        labels.forEach((label: any) => {\r\n            // 获取属性\r\n            const value = this.#getValue(label.origin);\r\n            // 判断属性是否变化，变化则更新\r\n            if (String(value) !== label.innerHTML) {\r\n                label.innerHTML = value;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 绑定属性\r\n     * @param att 需要绑定的属性 如s-value\r\n     */\r\n    #bindAtt(att: string) {\r\n        const nodes: any = this.querySelectorAll(`[${att}]`);\r\n        nodes.forEach((element: any) => {\r\n            // 获取属性\r\n            const key = element.getAttribute(att);\r\n            const _att = att.replace('s-', ''); // 真实属性\r\n            const value = this.#getValue(key);\r\n            // 判断属性是否变化，变化则更新\r\n            if (value !== element[_att]) {\r\n                element[_att] = value;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取指定属性值\r\n     * @param {string} origin 需要获取的属性 如a.b\r\n     * @returns 对应属性的值\r\n     */\r\n    #getValue(origin: string) {\r\n        try {\r\n            return origin.split('.').reduce((data: any, val: string) => {\r\n                return data[val];\r\n            }, this.$data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置$data中的属性\r\n     * @param key \r\n     * @param value \r\n     */\r\n    #setValue(key: string, value: any) {\r\n        let data = this.$data;\r\n        let array = key.split('.');\r\n        for (let i = 0; i < array.length; i++) {\r\n            const k = array[i];\r\n            if (i == array.length - 1) {\r\n                data[k] = value;\r\n            }\r\n            else {\r\n                data = data[k];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 给dom绑定$this，指向当前组件\r\n     */\r\n    #bindRoot() {\r\n        // 这个方法比递归更快\r\n        const list = this.querySelectorAll('*');\r\n        list.forEach((element: any) => {\r\n            if (!element.$this) {\r\n                element.$this = this; //绑定this\r\n                element.$set = (key: string, value: any) => {\r\n                    this.#setValue(key, value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 组件初始化状态，设置多个用于防抖\r\n     * unInited 未初始化\r\n     * initing 正在初始化\r\n     * inited 已经初始化\r\n     */\r\n    #state: 'unInited' | 'initing' | 'inited' = \"unInited\";\r\n    /**\r\n     * 组件初始化方法，只初始化一次\r\n     * 需要判断所有必要条件添加完成再进行初始化\r\n     */\r\n    async #onInit() {\r\n        if (!this.#rendered) { // 尚未渲染完成\r\n            return;\r\n        }\r\n\r\n        if (this.#state === 'initing' || this.#state === 'inited') {\r\n            return;\r\n        }\r\n\r\n        if (this.isReady()) {\r\n            this.#state = 'initing';\r\n            this.loading = true;\r\n            await this.onInit();\r\n            this.loading = false;\r\n            this.#state = 'inited';\r\n            this.afterInit();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否可以开始初始化，该方法可以被重写\r\n     * @returns 是否可以开始初始化\r\n     */\r\n    public isReady(): boolean {\r\n        return !!(this.map && this.mapView && this.mapConfig && (this.config || !this.manifest.hasConfig));\r\n    }\r\n\r\n    /**\r\n     * 组件初始化方法\r\n     */\r\n    async onInit() { }\r\n\r\n    /**\r\n     * 初始化完成之后调用的方法，该方法可以被重写\r\n     */\r\n    afterInit() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 当组件被打开\r\n     */\r\n    onOpen() { }\r\n\r\n    /**\r\n     * 当组件被关闭\r\n     */\r\n    onClose() { }\r\n\r\n\r\n}","/**\r\n * 从位置获取样式对象\r\n * 位置可以包含6个属性：左、上、右、下、宽、高\r\n * @param position \r\n * @returns \r\n */\r\nexport const getPositionStyle = (ps: any): any => {\r\n    let style: any = {};\r\n\r\n    const keys = ['left', 'top', 'right', 'bottom', 'width', 'height',\r\n        'margin', 'margin-left', 'margin-top', 'margin-right', 'margin-bottom',\r\n        'padding', 'padding-left', 'padding-top', 'padding-right', 'padding-bottom',\r\n        'z-index'\r\n    ];\r\n\r\n    keys.forEach(key => {\r\n        if (typeof ps[key] === 'number') {\r\n            style[key] = ps[key] + 'px';\r\n        }\r\n        else if (typeof ps[key] !== 'undefined') {\r\n            style[key] = ps[key];\r\n        }\r\n    });\r\n\r\n    // if (typeof ps.zIndex === 'undefined') {\r\n    //     //set zindex=auto instead of 0, because inner dom of widget may need to overlay other widget\r\n    //     //that has the same zindex.\r\n    //     style['z-index'] = 'auto';\r\n    // }\r\n    return style;\r\n};\r\n\r\n\r\n/**\r\n * 样式转换成字符串\r\n * @param style \r\n * @returns {string}\r\n */\r\nexport const styleToString = (style: any): string => {\r\n    let str = '';\r\n    for (const key in style) {\r\n        if (style.hasOwnProperty(key)) {\r\n            str += `${key}:${style[key]};`;\r\n        }\r\n    }\r\n    return str;\r\n}\r\n\r\n\r\n","import { Component } from \"../../decorators/component\";\r\nimport BaseWidget from \"../../base/base-widget\";\r\n\r\n// 组件的样式\r\nimport './widget-manager.scss';\r\nimport { getPositionStyle, styleToString } from \"../../utils/style\";\r\nimport { WidgetConfig } from \"../interface\";\r\n\r\n\r\n@Component({\r\n    tagName: 'webgis-widget-manager',\r\n    className: 'webgis-widget-manager',\r\n    hasConfig: true\r\n})\r\n/**\r\n * 组件管理器，用于加载所在地图的组件\r\n */\r\nexport class WidgetManager extends BaseWidget {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async onInit() {\r\n        this.config.forEach((_config: WidgetConfig) => {\r\n            this.addWidget(_config);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 添加参数默认值\r\n     * @param {WidgetConfig} widgetConfig \r\n     * @returns {WidgetConfig}\r\n     */\r\n    #getDefault(widgetConfig: WidgetConfig): WidgetConfig {\r\n        const d: WidgetConfig = {\r\n            label: \"\",\r\n            tagName: \"\",\r\n            position: {},\r\n            inPanel: false,\r\n            icon: \"\",\r\n            config: {}\r\n        };\r\n        widgetConfig = Object.assign(d, widgetConfig);\r\n        widgetConfig.position = Object.assign({\r\n            left: 'auto',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            top: 'auto',\r\n            /** 不需要设置默认宽高 */\r\n            // width: 'auto',\r\n            // height: 'auto',\r\n            // 'z-index': 1\r\n        }, getPositionStyle(widgetConfig.position));\r\n        return widgetConfig;\r\n    }\r\n\r\n    /**\r\n     * 添加widget到当前dom\r\n     * @param {WidgetConfig}_config \r\n     */\r\n    addWidget(_config: WidgetConfig) {\r\n        _config = this.#getDefault(_config);\r\n        try {\r\n            // 生成图标\r\n            if (_config.inPanel) {\r\n                const icon = this.createIcon(_config);\r\n                // 渲染图标\r\n                this.appendChild(icon);\r\n            }\r\n            // 创建widget\r\n            else {\r\n                const widget = this.createWidget(_config);\r\n                // 渲染widget\r\n                this.appendChild(widget);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建一个widget图标\r\n     * @param {WidgetConfig} _config \r\n     * @returns {BaseWidget}\r\n     */\r\n    createIcon(_config: WidgetConfig): BaseWidget {\r\n        const icon = document.createElement('webgis-widget-icon') as BaseWidget;\r\n        icon.startup({\r\n            mapView: this.mapView,\r\n            map: this.map,\r\n            config: _config,\r\n            mapConfig: this.mapConfig\r\n        });\r\n\r\n        // 不需要宽高\r\n        const { width, height, ...position } = _config.position;\r\n        const styleString = styleToString(position);\r\n        icon.setAttribute('style', styleString);\r\n        // icon.style.zIndex = '2';\r\n\r\n        icon.title = _config.label || _config.tagName;\r\n        return icon;\r\n    }\r\n\r\n    /**\r\n     * 创建一个widget\r\n     * @param {WidgetConfig}_config \r\n     * @returns {BaseWidget}\r\n     */\r\n    createWidget(_config: WidgetConfig): BaseWidget {\r\n        if (!_config.tagName) {\r\n            throw new Error(`tagName不能为空`);\r\n        }\r\n        const widget = document.createElement(_config.tagName) as BaseWidget;\r\n        if (!widget.startup) {\r\n            throw new Error(`没有找到tagName为${_config.tagName}的组件`);\r\n        }\r\n        widget.startup({\r\n            mapView: this.mapView,\r\n            map: this.map,\r\n            config: _config.config,\r\n            mapConfig: this.mapConfig\r\n        });\r\n\r\n        const position = _config.position;\r\n        const styleString = styleToString(position);\r\n        widget.setAttribute('style', styleString);\r\n        widget.style.zIndex = widget.style.zIndex || '1';\r\n\r\n        return widget;\r\n    }\r\n\r\n}\r\n","export default \"<div>\\r\\n    <!-- 图标 -->\\r\\n    <div class=\\\"widget-icon\\\" onclick=\\\"$this.iconClick(event)\\\">\\r\\n        <img s-src=\\\"icon\\\">\\r\\n    </div>\\r\\n    <!-- 组件 -->\\r\\n    <div class=\\\"widget-panel\\\">\\r\\n        <!-- 标题 -->\\r\\n        <div class=\\\"widget-header\\\">\\r\\n            <div class=\\\"widget-label\\\"></div>\\r\\n            <div class=\\\"close-btn\\\" onclick=\\\"$this.closeWidget()\\\"></div>\\r\\n        </div>\\r\\n        <!-- 内容 -->\\r\\n        <div class=\\\"widget-content\\\"></div>\\r\\n    </div>\\r\\n</div>\"","\r\nexport default class DomGeometry {\r\n\r\n    static getPosition(node: HTMLElement | Element, includeScroll: boolean) {\r\n        // summary:\r\n        //\t\tGets the position and size of the passed element relative to\r\n        //\t\tthe viewport (if includeScroll==false), or relative to the\r\n        //\t\tdocument root (if includeScroll==true).\r\n        //\r\n        // description:\r\n        //\t\tReturns an object of the form:\r\n        //\t\t`{ x: 100, y: 300, w: 20, h: 15 }`.\r\n        //\t\tIf includeScroll==true, the x and y values will include any\r\n        //\t\tdocument offsets that may affect the position relative to the\r\n        //\t\tviewport.\r\n        //\t\tUses the border-box model (inclusive of border and padding but\r\n        //\t\tnot margin).  Does not act as a setter.\r\n        // node: DOMNode|String\r\n        // includeScroll: Boolean?\r\n        // returns: Object\r\n\r\n        var ret = this.getBoundingClientRect(node);\r\n        ret = { x: ret.left, y: ret.top, w: ret.right - ret.left, h: ret.bottom - ret.top }\r\n\r\n        // account for document scrolling\r\n        // if offsetParent is used, ret value already includes scroll position\r\n        // so we may have to actually remove that value if !includeScroll\r\n        if (includeScroll) {\r\n            var scroll = this.docScroll(node.ownerDocument);\r\n            ret.x += scroll.x;\r\n            ret.y += scroll.y;\r\n        }\r\n\r\n        return ret; // Object\r\n    };\r\n\r\n    static getBoundingClientRect(/*DomNode*/ node: HTMLElement | Element): any {\r\n        // summary:\r\n        //\t\tGets the bounding client rectangle for a dom node.\r\n        // node: DOMNode\r\n\r\n        // This will return the result of node.getBoundingClientRect if node is in the dom, and\r\n        // {x:0, y:0, width:0, height:0, top:0, right:0, bottom:0, left:0} if it throws an error or the node is not on the dom\r\n        // This will handle when IE throws an error or Edge returns an empty object when node is not on the dom\r\n\r\n        var retEmpty = { x: 0, y: 0, width: 0, height: 0, top: 0, right: 0, bottom: 0, left: 0 },\r\n            ret: any;\r\n\r\n        try {\r\n            ret = node.getBoundingClientRect();\r\n        } catch (e) {\r\n            // IE throws an Unspecified Error if the node is not in the dom. Handle this by returning an object with 0 values\r\n            return retEmpty;\r\n        }\r\n\r\n        // Edge returns an empty object if the node is not in the dom. Handle this by returning an object with 0 values\r\n        if (typeof ret.left === \"undefined\") { return retEmpty; }\r\n\r\n        return ret;\r\n    }\r\n\r\n    static docScroll(/*Document?*/ doc: any) {\r\n        var node = doc.parentWindow || doc.defaultView;\r\n\r\n        if (\"pageXOffset\" in node) {\r\n            return { x: node.pageXOffset, y: node.pageYOffset };\r\n        }\r\n        else if (doc.documentElement) {\r\n            return { x: doc.documentElement.scrollLeft, y: doc.documentElement.scrollTop };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    };\r\n\r\n\r\n    static getPadBorderExtents(/*DomNode*/ node: HTMLElement) {\r\n        let style = window.getComputedStyle(node);\r\n        return {\r\n            l: parseInt(style.paddingLeft) + parseInt(style.borderLeft),\r\n            t: parseInt(style.paddingTop) + parseInt(style.borderTop),\r\n            r: parseInt(style.paddingRight) + parseInt(style.borderRight),\r\n            b: parseInt(style.paddingBottom) + parseInt(style.borderBottom),\r\n            w: parseInt(style.paddingLeft) + parseInt(style.borderLeft) + parseInt(style.paddingRight) + parseInt(style.borderRight),\r\n            h: parseInt(style.paddingTop) + parseInt(style.borderTop) + parseInt(style.paddingBottom) + parseInt(style.borderBottom)\r\n        };\r\n    };\r\n\r\n    static getMarginExtents(/*DomNode*/ node: HTMLElement) {\r\n        let style = window.getComputedStyle(node);\r\n        return {\r\n            l: parseInt(style.marginLeft),\r\n            t: parseInt(style.marginTop),\r\n            r: parseInt(style.marginRight),\r\n            b: parseInt(style.marginBottom),\r\n            w: parseInt(style.marginLeft) + parseInt(style.marginRight),\r\n            h: parseInt(style.marginTop) + parseInt(style.marginBottom)\r\n        };\r\n    }\r\n}","import './css/resizeHandle.scss';\r\nimport DomGeometry from './DomGeometry';\r\n\r\n// 配置参数接口\r\ninterface ResizeHandleOptions {\r\n    minSize: { w: number; h: number; };\r\n    maxSize: { w: number; h: number; };\r\n    constrainMax: boolean;\r\n    fixedAspect: boolean;\r\n}\r\n\r\n\r\n/**\r\n * @classdesc\r\n * 可调整大小的控件，可以拖拽改变大小。\r\n * @class\r\n * @param {HTMLElement} container - 需要添加resizeHandle的容器\r\n * @param {ResizeHandleOptions} options - 配置项\r\n * */\r\nexport default class ResizeHandle {\r\n\r\n    // 拖拽控件的dom节点\r\n    domNode: HTMLElement | undefined;\r\n\r\n    // 拖拽控件的容器 \r\n    container: HTMLElement;\r\n\r\n    // 最小尺寸\r\n    minSize = {\r\n        w: 20,\r\n        h: 20\r\n    }\r\n\r\n    // 切换此小部件是否关心maxHeight和maxWidth\r\n    constrainMax: boolean = false;\r\n    // 最大尺寸\r\n    maxSize = {\r\n        w: 0,\r\n        h: 0\r\n    }\r\n\r\n    // 是否固定宽高比\r\n    fixedAspect: boolean = false;\r\n\r\n    // 开始的尺寸\r\n    startSize: {\r\n        w: any;\r\n        h: any;\r\n        pbw: any;\r\n        pbh: any;\r\n        mw: any;\r\n        mh: any;\r\n    } | undefined;\r\n\r\n    // 是否允许修改 x y 尺寸\r\n    _resizeX: boolean = true;\r\n    _resizeY: boolean = true;\r\n\r\n    // 鼠标起始点\r\n    startPoint: { x: number; y: number; } = { x: 0, y: 0 };\r\n    // domNode的起始位置\r\n    startPosition: { l: any; t: any; } | undefined;\r\n    private _isSizing: boolean = false;\r\n\r\n\r\n    constructor(container: HTMLElement, options?: ResizeHandleOptions) {\r\n        this.container = container;\r\n        if (options) {\r\n            this.minSize = options.minSize || this.minSize;\r\n            this.maxSize = options.maxSize || this.maxSize;\r\n            this.constrainMax = options.constrainMax || this.constrainMax;\r\n            this.fixedAspect = options.fixedAspect || this.fixedAspect;\r\n        }\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.className = 'resize-handle';\r\n        this.container.appendChild(this.domNode);\r\n\r\n        this.domNode.addEventListener('mousedown', (event) => this._beginSizing(event));\r\n    }\r\n\r\n    _beginSizing(e: MouseEvent) {\r\n        e.preventDefault();\r\n        if (this._isSizing) { return; }\r\n        this.startPoint = { x: e.clientX, y: e.clientY };\r\n\r\n        let p = DomGeometry.getPosition(this.container, true);\r\n        this.startPosition = { l: p.x, t: p.y };\r\n\r\n        let padborder = DomGeometry.getPadBorderExtents(this.container);\r\n        let margin = DomGeometry.getMarginExtents(this.container);\r\n\r\n        this.startSize = {\r\n            w: this.container.offsetWidth,\r\n            h: this.container.offsetHeight,\r\n            //ResizeHelper.resize expects a bounding box of the\r\n            //border box, so let's keep track of padding/border\r\n            //width/height as well\r\n            pbw: padborder.w, pbh: padborder.h,\r\n            mw: margin.w, mh: margin.h\r\n        };\r\n\r\n        this._isSizing = true;\r\n\r\n        // 用于绑定和移除事件\r\n        this._endSizing = this._endSizing.bind(this);\r\n        this._updateSizing = this._updateSizing.bind(this);\r\n\r\n        document.addEventListener('mouseup', this._endSizing);\r\n        document.addEventListener('mousemove', this._updateSizing);\r\n        e.stopPropagation();\r\n    }\r\n\r\n    _updateSizing(e: MouseEvent) {\r\n        e.preventDefault();\r\n        if (this._isSizing) {\r\n            let box = this._getNewCoords(e, this.startPosition);\r\n            let w = box.w, h = box.h;\r\n            if (w >= 0) {\r\n                w = Math.max(w - this.startSize?.pbw - this.startSize?.mw, 0);\r\n            }\r\n            if (h >= 0) {\r\n                h = Math.max(h - this.startSize?.pbh - this.startSize?.mh, 0);\r\n            }\r\n\r\n            this.container.style.width = w + 'px';\r\n            this.container.style.height = h + 'px';\r\n        }\r\n    }\r\n\r\n    _endSizing(e: MouseEvent) {\r\n        e.preventDefault();\r\n        this._isSizing = false;\r\n        document.removeEventListener('mouseup', this._endSizing);\r\n        document.removeEventListener('mousemove', this._updateSizing);\r\n    }\r\n\r\n    _getNewCoords(e: MouseEvent, startPosition: any) {\r\n\r\n        // On IE, if you move the mouse above/to the left of the object being resized,\r\n        // sometimes clientX/Y aren't set, apparently.  Just ignore the event.\r\n        try {\r\n            if (!e.clientX || !e.clientY) { return false; }\r\n        } catch (err) {\r\n            // sometimes you get an exception accessing above fields...\r\n            return false;\r\n        }\r\n\r\n        var dx = this.startPoint?.x - e.clientX,\r\n            dy = this.startPoint?.y - e.clientY,\r\n            newW = this.startSize?.w - (this._resizeX ? dx : 0),\r\n            newH = this.startSize?.h - (this._resizeY ? dy : 0),\r\n            r = this._checkConstraints(newW, newH);\r\n\r\n        startPosition = (startPosition || this.startPosition);\r\n        if (startPosition && this._resizeX) {\r\n            // adjust x position for RtoL\r\n            r.l = startPosition.l + dx;\r\n            if (r.w != newW) {\r\n                r.l += (newW - r.w);\r\n            }\r\n            r.t = startPosition.t;\r\n        }\r\n\r\n        r.w += this.startSize?.pbw;\r\n        r.h += this.startSize?.pbh;\r\n\r\n        return r; // Object\r\n    }\r\n\r\n    // 检查尺寸是否超出最大值和最小值\r\n    _checkConstraints(newW: number, newH: number): any {\r\n        // summary:\r\n        //\t\tfilter through the various possible constaint possibilities.\r\n\r\n        // minimum size check\r\n        if (this.minSize) {\r\n            var tm = this.minSize;\r\n            if (newW < tm.w) {\r\n                newW = tm.w;\r\n            }\r\n            if (newH < tm.h) {\r\n                newH = tm.h;\r\n            }\r\n        }\r\n\r\n        // maximum size check:\r\n        if (this.constrainMax && this.maxSize) {\r\n            var ms = this.maxSize;\r\n            if (newW > ms.w) {\r\n                newW = ms.w;\r\n            }\r\n            if (newH > ms.h) {\r\n                newH = ms.h;\r\n            }\r\n        }\r\n\r\n        if (this.fixedAspect) {\r\n            var w = this.startSize?.w, h = this.startSize?.h,\r\n                delta = w * newH - h * newW;\r\n            if (delta < 0) {\r\n                newW = newH * w / h;\r\n            } else if (delta > 0) {\r\n                newH = newW * h / w;\r\n            }\r\n        }\r\n\r\n        return { w: newW, h: newH }; // Object\r\n    }\r\n\r\n}","import { Component } from \"../../decorators/component\";\r\nimport BaseWidget from \"../../base/base-widget\";\r\nimport { WidgetConfig } from \"../interface\";\r\nimport { styleToString } from \"../../utils/style\";\r\n\r\n\r\n// 组件的样式\r\nimport './widget-icon.scss';\r\n// 组件的模板\r\nimport template from './widget-icon.html?raw';\r\nimport DomGeometry from \"../../base/layout/DomGeometry\";\r\nimport ResizeHandle from \"../../base/layout/ResizeHandle\";\r\n\r\n@Component({\r\n    tagName: 'webgis-widget-icon',\r\n    className: 'webgis-widget-icon',\r\n    template: template,\r\n    hasConfig: true\r\n})\r\n/**\r\n * 组件的图标，用于在\r\n */\r\nexport class WidgetIcon extends BaseWidget {\r\n    #panel: any = null;\r\n    #widget: BaseWidget | null = null;\r\n    #isOpen: boolean = false;\r\n    group: string = 'default'; // 所在组，同组互斥\r\n\r\n    // 鼠标起始点\r\n    #startPoint: { x: number; y: number; } = { x: 0, y: 0 };\r\n    // panel的起始位置\r\n    #startPosition: { x: number; y: number; w: number; h: number; } = {\r\n        x: 0,\r\n        y: 0,\r\n        w: 0,\r\n        h: 0\r\n    };\r\n    #observer: ResizeObserver; // 观察器\r\n\r\n    constructor() {\r\n        super();\r\n        this.#observer = new ResizeObserver(this.resize.bind(this));\r\n    }\r\n\r\n    async onInit() {\r\n        // 设置图标\r\n        this.$data = {\r\n            icon: `${this.config.icon || 'icons/default.png'}`\r\n        }\r\n        this.group = this.config.group || 'default';\r\n\r\n        // 添加默认宽高\r\n        this.config.position = Object.assign({\r\n            width: '300px',\r\n            height: '300px'\r\n        }, this.config.position);\r\n    }\r\n\r\n    // 初始化Panel\r\n    initPanel() {\r\n        this.#widget = this.createWidget(this.config);\r\n        this.#panel = this.getElementsByClassName('widget-panel')[0];\r\n\r\n        // 设置样式 只需要宽高\r\n        const { width, height } = this.config.position;\r\n        const styleString = styleToString({\r\n            width,\r\n            height\r\n        });\r\n        this.#panel.setAttribute('style', styleString);\r\n\r\n        // 添加标题内容\r\n        let title = this.#panel.getElementsByClassName('widget-label')[0];\r\n        title.innerHTML = this.title;\r\n\r\n        let content = this.#panel.getElementsByClassName('widget-content')[0];\r\n        content.appendChild(this.#widget);\r\n\r\n        // 添加移动事件\r\n        let header = this.#panel.getElementsByClassName('widget-header')[0];\r\n        header.addEventListener('mousedown', this.onMouseDown.bind(this));\r\n\r\n        // 添加缩放\r\n        new ResizeHandle(this.#panel);\r\n\r\n        // 获取panel的初始位置\r\n        const panelP = this.getPanelXY();\r\n\r\n        // 计算初始位置\r\n        this.setPosition(panelP.left, panelP.top);\r\n    }\r\n\r\n\r\n    // 根据图标所在位置计算panel的初始位置\r\n    // 最终的位置只要left 和 top\r\n    getPanelXY() {\r\n        let position = this.config.panel?.position || {};\r\n        // 容器position\r\n        const p = DomGeometry.getPosition(this.parentElement as HTMLElement, true);\r\n        // 图标的位置\r\n        const icon = this.getElementsByClassName('widget-icon')[0];\r\n        const iconP = DomGeometry.getPosition(icon, true);\r\n        // panel的宽高\r\n        const panelP = DomGeometry.getPosition(this.#panel, true);\r\n\r\n        // 计算left 和top\r\n        let left, top;\r\n        if (position.left ?? false) {\r\n            left = parseInt(position.left);\r\n        }\r\n        else if (position.right ?? false) {\r\n            left = p.w - panelP.w - parseInt(position.right);\r\n        }\r\n        // 如果图标的位置超过容器宽度的一半，则在左侧展示panel，否则在右侧展示\r\n        else if (iconP.x > p.w / 2) {\r\n            left = iconP.x - panelP.w - 5;\r\n        }\r\n        // 默认位置\r\n        else {\r\n            left = iconP.x + iconP.w + 5;\r\n        }\r\n\r\n        // 计算高度\r\n        if (position.top ?? false) {\r\n            top = parseInt(position.top);\r\n        }\r\n        else if (position.bottom ?? false) {\r\n            top = p.w - panelP.h - parseInt(position.bottom);\r\n        }\r\n        else {\r\n            top = iconP.y;\r\n        }\r\n\r\n        return {\r\n            left: left,\r\n            top: top\r\n        };\r\n    }\r\n\r\n    iconClick() {\r\n        this.#isOpen ? this.closeWidget() : this.openWidget();\r\n    }\r\n\r\n    openWidget() {\r\n        this.closeOthers();\r\n\r\n        this.classList.add('webgis-widget-icon-open');\r\n        if (!this.#widget) {\r\n            this.initPanel();\r\n        }\r\n        this.#widget?.onOpen();\r\n        this.#isOpen = true;\r\n        // 添加容器变化事件\r\n        this.#observer.observe(this.parentElement as HTMLElement);\r\n    }\r\n\r\n    closeWidget() {\r\n        this.classList.remove('webgis-widget-icon-open');\r\n        // 取消容器变化事件\r\n        this.#observer.unobserve(this.parentElement as HTMLElement);\r\n        this.#widget?.onClose();\r\n        this.#isOpen = false;\r\n    }\r\n\r\n    // 关闭其他同组的widget\r\n    closeOthers() {\r\n        const others = this.parentNode?.querySelectorAll('webgis-widget-icon');\r\n        others?.forEach((item: any) => {\r\n            if (this.group == item.group) {\r\n                item.closeWidget();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 创建一个widget\r\n     * @param {WidgetConfig}_config \r\n     * @returns {BaseWidget}\r\n     */\r\n    createWidget(_config: WidgetConfig): BaseWidget {\r\n        if (!_config.tagName) {\r\n            throw new Error(`tagName不能为空`);\r\n        }\r\n        const widget = document.createElement(_config.tagName) as BaseWidget;\r\n        if (!widget.startup) {\r\n            throw new Error(`没有找到tagName为${_config.tagName}的组件`);\r\n        }\r\n        widget.startup({\r\n            mapView: this.mapView,\r\n            map: this.map,\r\n            config: _config.config,\r\n            mapConfig: this.mapConfig\r\n        });\r\n        return widget;\r\n    }\r\n\r\n    // 销毁\r\n    destroy() {\r\n        this.#observer.disconnect();\r\n        this.remove();\r\n    }\r\n\r\n    // 重置位置\r\n    resize() {\r\n        this.#startPosition = DomGeometry.getPosition(this.#panel, true);\r\n        this.setPosition(this.#startPosition.x, this.#startPosition.y);\r\n    }\r\n\r\n    onMouseDown(e: MouseEvent) {\r\n        e.preventDefault();\r\n        this.#panel.classList.add('panel-dragging');\r\n\r\n        this.#startPoint = { x: e.clientX, y: e.clientY };\r\n        this.#startPosition = DomGeometry.getPosition(this.#panel, true);\r\n\r\n        // 用于绑定和移除事件\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onMouseUp = this.onMouseUp.bind(this);\r\n\r\n        document.addEventListener('mousemove', this.onMouseMove);\r\n        document.addEventListener('mouseup', this.onMouseUp);\r\n    }\r\n\r\n    onMouseMove(e: MouseEvent) {\r\n        e.preventDefault();\r\n        let dx = this.#startPoint.x - e.clientX;\r\n        let dy = this.#startPoint.y - e.clientY;\r\n\r\n        let x = this.#startPosition.x - dx;\r\n        let y = this.#startPosition.y - dy;\r\n\r\n        this.setPosition(x, y);\r\n    }\r\n\r\n    setPosition(x: number, y: number) {\r\n        let p = this.checkConstraints(x, y);\r\n        // 获取当前组件的相对位置\r\n        let position = DomGeometry.getPosition(this, true);\r\n        // 设置的时候需要减去图标所在的位置\r\n        this.#panel.style.left = (p.x - position.x) + 'px';\r\n        this.#panel.style.top = (p.y - position.y) + 'px';\r\n    }\r\n\r\n    onMouseUp(e: MouseEvent) {\r\n        e.preventDefault();\r\n        this.#panel.classList.remove('panel-dragging');\r\n        document.removeEventListener('mousemove', this.onMouseMove);\r\n        document.removeEventListener('mouseup', this.onMouseUp);\r\n    }\r\n\r\n    // 检查约束条件\r\n    checkConstraints(x: number, y: number) {\r\n        // 容器范围\r\n        const p = DomGeometry.getPosition(this.parentElement as HTMLElement, true);\r\n        // 要保证panel留在容器范围内\r\n        const mixX = p.x;\r\n        const maxX = p.w - this.#startPosition.w;\r\n        const mixY = p.y;\r\n        const maxY = p.h - this.#startPosition.h;\r\n        x = Math.max(mixX, Math.min(maxX, x));\r\n        y = Math.max(mixY, Math.min(maxY, y));\r\n        return { x: x, y: y };\r\n    }\r\n}\r\n","// 样式\r\nimport './themes/default.scss';\r\nimport { init } from './utils/init';\r\n\r\n// 基础标签\r\nexport { BaseLabel } from './base/base-label';\r\n\r\n// 管理器\r\nexport { WidgetManager } from './manager/widget-manager/widget-manager';\r\nexport { WidgetIcon } from './manager/widget-icon/widget-icon';\r\n\r\n\r\n// 初始化\r\ninit().then(() => {\r\n    console.log('初始化完成');\r\n});"],"names":["Loader","src","isModule","resolve","script","href","link","url","init","isDebug","configUrl","config","request","key","item","BaseLabel","__privateAdd","_origin","__privateSet","__privateGet","Mode","Mode2","Component","manifest","target","getManifest","timerFunc","callback","BaseWidget","_loadConfig","_onLoading","_initDom","_defineReactive","_delayRefresh","_refresh","_bindAtt","_getValue","_setValue","_bindRoot","_onInit","_mapConfig","_mapView","_map","_config","_loading","_data","_labelTag","_rendered","_mode","_refreshing","_state","__privateMethod","loadConfig_fn","initDom_fn","onInit_fn","args","value","onLoading_fn","defineReactive_fn","refresh_fn","response","className","template","bindRoot_fn","obj","p","val","delayRefresh_fn","att","bindAtt_fn","label","getValue_fn","element","_att","origin","data","error","setValue_fn","array","i","k","getPositionStyle","ps","style","styleToString","str","WidgetManager","_a","_getDefault","getDefault_fn","icon","widget","width","height","position","styleString","widgetConfig","exports","__decorateClass","DomGeometry","node","includeScroll","ret","scroll","retEmpty","doc","ResizeHandle","container","options","__publicField","event","e","padborder","margin","box","w","h","_b","_c","_d","startPosition","dx","dy","newW","newH","r","_e","_f","tm","ms","delta","WidgetIcon","_panel","_widget","_isOpen","_startPoint","_startPosition","_observer","title","panelP","iconP","left","top","others","x","y","mixX","maxX","mixY","maxY"],"mappings":"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"}